version: 2.1
orbs:
  aws-cli: circleci/aws-cli@3.1.3
jobs:
  # ----------
  # pre-test
  # ----------
  cfn-lint:
    executor: aws-cli/default
    steps:
      - checkout
      - run: pip install cfn-lint
      - run:
          name: run cfn-lint
          command: |
            cfn-lint -i W3002 -t cfn/*/*.yml
  # ----------
  # infra test
  # ----------
  taskcat-test:
    executor: aws-cli/default
    steps:
      - aws-cli/setup:
          profile-name: default
      - checkout
      - run:
          name: install taskcat
          command: pip install taskcat
      - run:
          name: cfn deploy test
          command: |
            cd cfn
            taskcat test run -m -l
          no_output_timeout: 30m #default 10m
      - run:
          name: remove taskcat bucket
          command: aws s3 ls | awk '{print $3}' | grep "^tcat" | xargs -I {} aws s3 rb s3://{} --force
  # ----------
  # deploy
  # ----------
  cloudformation-deploy:
    executor: aws-cli/default
    steps:
      - aws-cli/setup:
          profile-name: default
      - checkout
      - run:
          name: deploy vpc
          command: |
            aws cloudformation deploy \
              --stack-name raisetech202210-vpc \
              --template-file cfn/01_network/01_vpc.yml \
              --capabilities CAPABILITY_NAMED_IAM
      - run:
          name: deploy sg
          command: |
            aws cloudformation deploy \
              --stack-name raisetech202210-sg \
              --template-file cfn/01_network/02_sg.yml \
              --capabilities CAPABILITY_NAMED_IAM
      - run:
          name: deploy ec2
          command: |
            aws cloudformation deploy \
              --stack-name raisetech202210-ec2 \
              --template-file cfn/02_compute/01_ec2.yml \
              --capabilities CAPABILITY_NAMED_IAM
      - run:
          name: deploy rds
          command: |
            aws cloudformation deploy \
              --stack-name raisetech202210-rds \
              --template-file cfn/02_compute/02_rds.yml \
              --capabilities CAPABILITY_NAMED_IAM \
              --parameter-overrides DbPassword=raisetesh202210!
          no_output_timeout: 30m #default 10m
      - run:
          name: deploy alb
          command: |
            aws cloudformation deploy \
              --stack-name raisetech202210-alb \
              --template-file cfn/02_compute/03_alb.yml \
              --capabilities CAPABILITY_NAMED_IAM
  # ----------
  # OS test
  # ----------
  serverspec:
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup:
          profile-name: default
      - run:
          name: create ssh-config
          command: |
            EC2_PUBLIC_IP=$(aws ec2 describe-instances --filter "Name=tag:Name,Values=raisetech202210-cfn-ec2" --query 'Reservations[].Instances[].PublicIpAddress|[0]' --output text)
            cat \<< EOF > ~/.ssh/config
            Host raisetech202210-ec2
              HostName ${EC2_PUBLIC_IP}
            Host *
              AddKeysToAgent yes
              CheckHostIP no
              StrictHostKeyChecking no
              UserKnownHostsFile=/dev/null
              User ec2-user
              IdentityFile ~/.ssh/id_rsa
            EOF
            cat ~/.ssh/config
      - run:
          name: add ssh key from aws parameter store
          command: |
            mkdir -p ~/.ssh
            KeyPairID=$(aws ec2 describe-key-pairs --key-names "raistech202210-cfn-keypair" --query 'KeyPairs[].KeyPairId' --output text)
            echo $(aws ssm get-parameter --name /ec2/keypair/${KeyPairID} --with-decryption --query Parameter.Value --output text) > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
      - run:
          name: install serverspec
          command: |
            sudo apt-get update
            sudo apt-get install -y ruby ruby-dev build-essential
            sudo gem install serverspec
      - run:
          name: run serverspec
          command: |
            cd serverspec
            rake spec:raisetech202210-ec2
workflows:
  raisetech:
    jobs:
      - cfn-lint
      - taskcat-test:
          requires:
            - cfn-lint
      - deploy-approve:
          type: approval
          requires:
            - taskcat-test
      - cloudformation-deploy:
          requires:
            - deploy-approve
      - serverspec:
          requires:
            - cloudformation-deploy
